version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.8  # Use your desired base Docker image
    environment:
      SONAR_TOKEN: $SONAR_TOKEN  # Add your SonarQube token as an environment variable
      SONAR_PROJECT_KEY: $Root9-max_Root9-max  # Your SonarQube project key
      SONAR_PROJECT_NAME: $sidiq  # Name of your project

jobs:
  sonar-scanner:
    docker:
      - image: circleci/python:3.8  # Ensure this image has necessary tools (adjust for your stack)
    steps:
      - checkout  # Checks out your code to the job environment
      - run:
          name: Install Java 17
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-17-jdk
            # Set JAVA_HOME to Java 17
            echo "export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> ~/.bashrc
            echo "export PATH=$JAVA_HOME/bin:$PATH" >> ~/.bashrc
            source ~/.bashrc  # Apply the changes to the shell environment
            java -version  # Verify that Java 17 is installed correctly
      - run:
          name: Install SonarQube Scanner
          command: |
            curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
            unzip sonar-scanner-cli.zip
            sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
            sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
      - run:
          name: Run SonarQube Analysis
          command: |
            sonar-scanner \
              -Dsonar.projectKey=$Root9-max_Root9-max \
              -Dsonar.projectName=$sidiq \
              -Dsonar.sources=. \
              -Dsonar.host.url=https://sonarcloud.io \
              -Dsonar.login=$SONAR_TOKEN

workflows:
  version: 2
  build:
    jobs:
      - sonar-scanner
